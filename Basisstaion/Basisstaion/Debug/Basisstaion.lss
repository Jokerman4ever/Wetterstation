
Basisstaion.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000072e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00802000  0000072e  000007c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00802018  00802018  000007da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000080c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004b8e  00000000  00000000  00000974  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003861  00000000  00000000  00005502  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b33  00000000  00000000  00008d63  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f8  00000000  00000000  0000a898  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0002c5a4  00000000  00000000  0000ab90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e90  00000000  00000000  00037134  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00037fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00000b0e  00000000  00000000  0003812c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
   8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
   c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  10:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  14:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  18:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  1c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  20:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  24:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  28:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  2c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  30:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  34:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  38:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  3c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  40:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  44:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  48:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  4c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  50:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  54:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  58:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  5c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  60:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  64:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  68:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  6c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  70:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  74:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  78:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  7c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  80:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  84:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  88:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  8c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  90:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  94:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  98:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  9c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  a0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  a4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  a8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  ac:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  b0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  b4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  b8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  bc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  c0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  c4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  c8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  cc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  d0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  d4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  d8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  dc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  e0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  e4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  e8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  ec:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  f0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  f4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  f8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
  fc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 100:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 104:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 108:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 10c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 110:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 114:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 118:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 11c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 120:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 124:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 128:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 12c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 130:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 134:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 138:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 13c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 140:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 144:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 148:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 14c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 150:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 154:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 158:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 15c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 160:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 164:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 168:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 16c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 170:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 174:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 178:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 17c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 180:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 184:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 188:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 18c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 190:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 194:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 198:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 19c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1a0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1a4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1a8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1ac:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1b0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1b4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1b8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1bc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1c0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1c4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1c8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1cc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1d0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1d4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1d8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1dc:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1e0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1e4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1e8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1ec:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1f0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1f4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>
 1f8:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_copy_data>:
 20c:	10 e2       	ldi	r17, 0x20	; 32
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e2       	ldi	r27, 0x20	; 32
 212:	ee e2       	ldi	r30, 0x2E	; 46
 214:	f7 e0       	ldi	r31, 0x07	; 7
 216:	00 e0       	ldi	r16, 0x00	; 0
 218:	0b bf       	out	0x3b, r16	; 59
 21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
 21c:	07 90       	elpm	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	a8 31       	cpi	r26, 0x18	; 24
 222:	b1 07       	cpc	r27, r17
 224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>

00000226 <__do_clear_bss>:
 226:	20 e2       	ldi	r18, 0x20	; 32
 228:	a8 e1       	ldi	r26, 0x18	; 24
 22a:	b0 e2       	ldi	r27, 0x20	; 32
 22c:	01 c0       	rjmp	.+2      	; 0x230 <.do_clear_bss_start>

0000022e <.do_clear_bss_loop>:
 22e:	1d 92       	st	X+, r1

00000230 <.do_clear_bss_start>:
 230:	ad 31       	cpi	r26, 0x1D	; 29
 232:	b2 07       	cpc	r27, r18
 234:	e1 f7       	brne	.-8      	; 0x22e <.do_clear_bss_loop>
 236:	0e 94 48 03 	call	0x690	; 0x690 <main>
 23a:	0c 94 95 03 	jmp	0x72a	; 0x72a <_exit>

0000023e <__bad_interrupt>:
 23e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000242 <lcd_WNibble>:
 242:	a0 e6       	ldi	r26, 0x60	; 96
 244:	b6 e0       	ldi	r27, 0x06	; 6
 246:	14 96       	adiw	r26, 0x04	; 4
 248:	9c 91       	ld	r25, X
 24a:	14 97       	sbiw	r26, 0x04	; 4
 24c:	93 7c       	andi	r25, 0xC3	; 195
 24e:	14 96       	adiw	r26, 0x04	; 4
 250:	9c 93       	st	X, r25
 252:	14 97       	sbiw	r26, 0x04	; 4
 254:	14 96       	adiw	r26, 0x04	; 4
 256:	9c 91       	ld	r25, X
 258:	14 97       	sbiw	r26, 0x04	; 4
 25a:	83 fb       	bst	r24, 3
 25c:	66 27       	eor	r22, r22
 25e:	60 f9       	bld	r22, 0
 260:	70 e0       	ldi	r23, 0x00	; 0
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	62 95       	swap	r22
 268:	72 95       	swap	r23
 26a:	70 7f       	andi	r23, 0xF0	; 240
 26c:	76 27       	eor	r23, r22
 26e:	60 7f       	andi	r22, 0xF0	; 240
 270:	76 27       	eor	r23, r22
 272:	e8 2f       	mov	r30, r24
 274:	e1 70       	andi	r30, 0x01	; 1
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	ee 0f       	add	r30, r30
 27a:	ff 1f       	adc	r31, r31
 27c:	ee 0f       	add	r30, r30
 27e:	ff 1f       	adc	r31, r31
 280:	e9 2b       	or	r30, r25
 282:	6e 2b       	or	r22, r30
 284:	82 fb       	bst	r24, 2
 286:	44 27       	eor	r20, r20
 288:	40 f9       	bld	r20, 0
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	42 95       	swap	r20
 28e:	52 95       	swap	r21
 290:	50 7f       	andi	r21, 0xF0	; 240
 292:	54 27       	eor	r21, r20
 294:	40 7f       	andi	r20, 0xF0	; 240
 296:	54 27       	eor	r21, r20
 298:	46 2b       	or	r20, r22
 29a:	81 fb       	bst	r24, 1
 29c:	22 27       	eor	r18, r18
 29e:	20 f9       	bld	r18, 0
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	22 0f       	add	r18, r18
 2a4:	33 1f       	adc	r19, r19
 2a6:	22 0f       	add	r18, r18
 2a8:	33 1f       	adc	r19, r19
 2aa:	22 0f       	add	r18, r18
 2ac:	33 1f       	adc	r19, r19
 2ae:	24 2b       	or	r18, r20
 2b0:	14 96       	adiw	r26, 0x04	; 4
 2b2:	2c 93       	st	X, r18
 2b4:	08 95       	ret

000002b6 <lcd_enable>:
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	c0 e6       	ldi	r28, 0x60	; 96
 2bc:	d6 e0       	ldi	r29, 0x06	; 6
 2be:	8c 81       	ldd	r24, Y+4	; 0x04
 2c0:	82 60       	ori	r24, 0x02	; 2
 2c2:	8c 83       	std	Y+4, r24	; 0x04
 2c4:	89 e1       	ldi	r24, 0x19	; 25
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 19 03 	call	0x632	; 0x632 <_xdelay_us>
 2cc:	8c 81       	ldd	r24, Y+4	; 0x04
 2ce:	8d 7f       	andi	r24, 0xFD	; 253
 2d0:	8c 83       	std	Y+4, r24	; 0x04
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	08 95       	ret

000002d8 <lcd_Write>:
 2d8:	cf 93       	push	r28
 2da:	c8 2f       	mov	r28, r24
 2dc:	66 23       	and	r22, r22
 2de:	31 f0       	breq	.+12     	; 0x2ec <lcd_Write+0x14>
 2e0:	e0 e6       	ldi	r30, 0x60	; 96
 2e2:	f6 e0       	ldi	r31, 0x06	; 6
 2e4:	84 81       	ldd	r24, Z+4	; 0x04
 2e6:	81 60       	ori	r24, 0x01	; 1
 2e8:	84 83       	std	Z+4, r24	; 0x04
 2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <lcd_Write+0x1e>
 2ec:	e0 e6       	ldi	r30, 0x60	; 96
 2ee:	f6 e0       	ldi	r31, 0x06	; 6
 2f0:	84 81       	ldd	r24, Z+4	; 0x04
 2f2:	8e 7f       	andi	r24, 0xFE	; 254
 2f4:	84 83       	std	Z+4, r24	; 0x04
 2f6:	8c 2f       	mov	r24, r28
 2f8:	82 95       	swap	r24
 2fa:	8f 70       	andi	r24, 0x0F	; 15
 2fc:	0e 94 21 01 	call	0x242	; 0x242 <lcd_WNibble>
 300:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_enable>
 304:	8c 2f       	mov	r24, r28
 306:	8f 70       	andi	r24, 0x0F	; 15
 308:	0e 94 21 01 	call	0x242	; 0x242 <lcd_WNibble>
 30c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_enable>
 310:	82 e3       	ldi	r24, 0x32	; 50
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 19 03 	call	0x632	; 0x632 <_xdelay_us>
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <lcd_string>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	ec 01       	movw	r28, r24
 322:	88 81       	ld	r24, Y
 324:	88 23       	and	r24, r24
 326:	39 f0       	breq	.+14     	; 0x336 <lcd_string+0x1a>
 328:	21 96       	adiw	r28, 0x01	; 1
 32a:	61 e0       	ldi	r22, 0x01	; 1
 32c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <lcd_Write>
 330:	89 91       	ld	r24, Y+
 332:	81 11       	cpse	r24, r1
 334:	fa cf       	rjmp	.-12     	; 0x32a <lcd_string+0xe>
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <Set_Unix_Time>:
 33c:	60 93 18 20 	sts	0x2018, r22	; 0x802018 <__data_end>
 340:	70 93 19 20 	sts	0x2019, r23	; 0x802019 <__data_end+0x1>
 344:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <__data_end+0x2>
 348:	90 93 1b 20 	sts	0x201B, r25	; 0x80201b <__data_end+0x3>
 34c:	08 95       	ret

0000034e <time_GetLocalTime>:
 34e:	3f 92       	push	r3
 350:	4f 92       	push	r4
 352:	5f 92       	push	r5
 354:	6f 92       	push	r6
 356:	7f 92       	push	r7
 358:	8f 92       	push	r8
 35a:	9f 92       	push	r9
 35c:	af 92       	push	r10
 35e:	bf 92       	push	r11
 360:	cf 92       	push	r12
 362:	df 92       	push	r13
 364:	ef 92       	push	r14
 366:	ff 92       	push	r15
 368:	0f 93       	push	r16
 36a:	1f 93       	push	r17
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	ec 01       	movw	r28, r24
 372:	60 91 18 20 	lds	r22, 0x2018	; 0x802018 <__data_end>
 376:	70 91 19 20 	lds	r23, 0x2019	; 0x802019 <__data_end+0x1>
 37a:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end+0x2>
 37e:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x3>
 382:	20 e8       	ldi	r18, 0x80	; 128
 384:	31 e5       	ldi	r19, 0x51	; 81
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	50 e0       	ldi	r21, 0x00	; 0
 38a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__udivmodsi4>
 38e:	69 01       	movw	r12, r18
 390:	7a 01       	movw	r14, r20
 392:	60 38       	cpi	r22, 0x80	; 128
 394:	21 e5       	ldi	r18, 0x51	; 81
 396:	72 07       	cpc	r23, r18
 398:	21 e0       	ldi	r18, 0x01	; 1
 39a:	82 07       	cpc	r24, r18
 39c:	91 05       	cpc	r25, r1
 39e:	80 f0       	brcs	.+32     	; 0x3c0 <time_GetLocalTime+0x72>
 3a0:	60 58       	subi	r22, 0x80	; 128
 3a2:	71 45       	sbci	r23, 0x51	; 81
 3a4:	81 40       	sbci	r24, 0x01	; 1
 3a6:	91 09       	sbc	r25, r1
 3a8:	3f ef       	ldi	r19, 0xFF	; 255
 3aa:	c3 1a       	sub	r12, r19
 3ac:	d3 0a       	sbc	r13, r19
 3ae:	e3 0a       	sbc	r14, r19
 3b0:	f3 0a       	sbc	r15, r19
 3b2:	60 38       	cpi	r22, 0x80	; 128
 3b4:	21 e5       	ldi	r18, 0x51	; 81
 3b6:	72 07       	cpc	r23, r18
 3b8:	21 e0       	ldi	r18, 0x01	; 1
 3ba:	82 07       	cpc	r24, r18
 3bc:	91 05       	cpc	r25, r1
 3be:	80 f7       	brcc	.-32     	; 0x3a0 <time_GetLocalTime+0x52>
 3c0:	20 e1       	ldi	r18, 0x10	; 16
 3c2:	3e e0       	ldi	r19, 0x0E	; 14
 3c4:	40 e0       	ldi	r20, 0x00	; 0
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__udivmodsi4>
 3cc:	2c 83       	std	Y+4, r18	; 0x04
 3ce:	3d 83       	std	Y+5, r19	; 0x05
 3d0:	2c e3       	ldi	r18, 0x3C	; 60
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	40 e0       	ldi	r20, 0x00	; 0
 3d6:	50 e0       	ldi	r21, 0x00	; 0
 3d8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__udivmodsi4>
 3dc:	2a 83       	std	Y+2, r18	; 0x02
 3de:	3b 83       	std	Y+3, r19	; 0x03
 3e0:	68 83       	st	Y, r22
 3e2:	79 83       	std	Y+1, r23	; 0x01
 3e4:	c7 01       	movw	r24, r14
 3e6:	b6 01       	movw	r22, r12
 3e8:	6c 5f       	subi	r22, 0xFC	; 252
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	27 e0       	ldi	r18, 0x07	; 7
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	40 e0       	ldi	r20, 0x00	; 0
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__udivmodsi4>
 3fc:	77 23       	and	r23, r23
 3fe:	1c f0       	brlt	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	6c 87       	std	Y+12, r22	; 0x0c
 402:	7d 87       	std	Y+13, r23	; 0x0d
 404:	04 c0       	rjmp	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 406:	69 5f       	subi	r22, 0xF9	; 249
 408:	7f 4f       	sbci	r23, 0xFF	; 255
 40a:	6c 87       	std	Y+12, r22	; 0x0c
 40c:	7d 87       	std	Y+13, r23	; 0x0d
 40e:	42 eb       	ldi	r20, 0xB2	; 178
 410:	57 e0       	ldi	r21, 0x07	; 7
 412:	0f 2e       	mov	r0, r31
 414:	fd e6       	ldi	r31, 0x6D	; 109
 416:	9f 2e       	mov	r9, r31
 418:	f0 2d       	mov	r31, r0
 41a:	aa 24       	eor	r10, r10
 41c:	a3 94       	inc	r10
 41e:	b1 2c       	mov	r11, r1
 420:	71 2c       	mov	r7, r1
 422:	0f 2e       	mov	r0, r31
 424:	f4 e6       	ldi	r31, 0x64	; 100
 426:	8f 2e       	mov	r8, r31
 428:	f0 2d       	mov	r31, r0
 42a:	0f 2e       	mov	r0, r31
 42c:	fe e6       	ldi	r31, 0x6E	; 110
 42e:	6f 2e       	mov	r6, r31
 430:	f0 2d       	mov	r31, r0
 432:	55 24       	eor	r5, r5
 434:	53 94       	inc	r5
 436:	41 2c       	mov	r4, r1
 438:	31 2c       	mov	r3, r1
 43a:	00 e9       	ldi	r16, 0x90	; 144
 43c:	11 e0       	ldi	r17, 0x01	; 1
 43e:	06 c0       	rjmp	.+12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 440:	4f 5f       	subi	r20, 0xFF	; 255
 442:	5f 4f       	sbci	r21, 0xFF	; 255
 444:	c8 1a       	sub	r12, r24
 446:	d9 0a       	sbc	r13, r25
 448:	ea 0a       	sbc	r14, r26
 44a:	fb 0a       	sbc	r15, r27
 44c:	fa 01       	movw	r30, r20
 44e:	e3 70       	andi	r30, 0x03	; 3
 450:	ff 27       	eor	r31, r31
 452:	30 97       	sbiw	r30, 0x00	; 0
 454:	71 f5       	brne	.+92     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 456:	9a 01       	movw	r18, r20
 458:	36 95       	lsr	r19
 45a:	27 95       	ror	r18
 45c:	36 95       	lsr	r19
 45e:	27 95       	ror	r18
 460:	ab e7       	ldi	r26, 0x7B	; 123
 462:	b4 e1       	ldi	r27, 0x14	; 20
 464:	0e 94 86 03 	call	0x70c	; 0x70c <__umulhisi3>
 468:	96 95       	lsr	r25
 46a:	87 95       	ror	r24
 46c:	88 9e       	mul	r8, r24
 46e:	90 01       	movw	r18, r0
 470:	89 9e       	mul	r8, r25
 472:	30 0d       	add	r19, r0
 474:	11 24       	eor	r1, r1
 476:	42 17       	cp	r20, r18
 478:	53 07       	cpc	r21, r19
 47a:	01 f5       	brne	.+64     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 47c:	9a 01       	movw	r18, r20
 47e:	32 95       	swap	r19
 480:	22 95       	swap	r18
 482:	2f 70       	andi	r18, 0x0F	; 15
 484:	23 27       	eor	r18, r19
 486:	3f 70       	andi	r19, 0x0F	; 15
 488:	23 27       	eor	r18, r19
 48a:	ae e3       	ldi	r26, 0x3E	; 62
 48c:	ba e0       	ldi	r27, 0x0A	; 10
 48e:	0e 94 86 03 	call	0x70c	; 0x70c <__umulhisi3>
 492:	bc 01       	movw	r22, r24
 494:	60 9f       	mul	r22, r16
 496:	c0 01       	movw	r24, r0
 498:	61 9f       	mul	r22, r17
 49a:	90 0d       	add	r25, r0
 49c:	70 9f       	mul	r23, r16
 49e:	90 0d       	add	r25, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	48 17       	cp	r20, r24
 4a4:	59 07       	cpc	r21, r25
 4a6:	79 f4       	brne	.+30     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4a8:	86 2d       	mov	r24, r6
 4aa:	95 2d       	mov	r25, r5
 4ac:	a4 2d       	mov	r26, r4
 4ae:	b3 2d       	mov	r27, r3
 4b0:	0e c0       	rjmp	.+28     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4b2:	89 2d       	mov	r24, r9
 4b4:	9a 2d       	mov	r25, r10
 4b6:	ab 2d       	mov	r26, r11
 4b8:	b7 2d       	mov	r27, r7
 4ba:	09 c0       	rjmp	.+18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4bc:	86 2d       	mov	r24, r6
 4be:	95 2d       	mov	r25, r5
 4c0:	a4 2d       	mov	r26, r4
 4c2:	b3 2d       	mov	r27, r3
 4c4:	04 c0       	rjmp	.+8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c6:	89 2d       	mov	r24, r9
 4c8:	9a 2d       	mov	r25, r10
 4ca:	ab 2d       	mov	r26, r11
 4cc:	b7 2d       	mov	r27, r7
 4ce:	c8 16       	cp	r12, r24
 4d0:	d9 06       	cpc	r13, r25
 4d2:	ea 06       	cpc	r14, r26
 4d4:	fb 06       	cpc	r15, r27
 4d6:	08 f0       	brcs	.+2      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d8:	b3 cf       	rjmp	.-154    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 4da:	4a 87       	std	Y+10, r20	; 0x0a
 4dc:	5b 87       	std	Y+11, r21	; 0x0b
 4de:	ef 2b       	or	r30, r31
 4e0:	91 f5       	brne	.+100    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 4e2:	9a 01       	movw	r18, r20
 4e4:	36 95       	lsr	r19
 4e6:	27 95       	ror	r18
 4e8:	36 95       	lsr	r19
 4ea:	27 95       	ror	r18
 4ec:	ab e7       	ldi	r26, 0x7B	; 123
 4ee:	b4 e1       	ldi	r27, 0x14	; 20
 4f0:	0e 94 86 03 	call	0x70c	; 0x70c <__umulhisi3>
 4f4:	96 95       	lsr	r25
 4f6:	87 95       	ror	r24
 4f8:	64 e6       	ldi	r22, 0x64	; 100
 4fa:	68 9f       	mul	r22, r24
 4fc:	90 01       	movw	r18, r0
 4fe:	69 9f       	mul	r22, r25
 500:	30 0d       	add	r19, r0
 502:	11 24       	eor	r1, r1
 504:	42 17       	cp	r20, r18
 506:	53 07       	cpc	r21, r19
 508:	09 f5       	brne	.+66     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 50a:	9a 01       	movw	r18, r20
 50c:	32 95       	swap	r19
 50e:	22 95       	swap	r18
 510:	2f 70       	andi	r18, 0x0F	; 15
 512:	23 27       	eor	r18, r19
 514:	3f 70       	andi	r19, 0x0F	; 15
 516:	23 27       	eor	r18, r19
 518:	ae e3       	ldi	r26, 0x3E	; 62
 51a:	ba e0       	ldi	r27, 0x0A	; 10
 51c:	0e 94 86 03 	call	0x70c	; 0x70c <__umulhisi3>
 520:	20 e9       	ldi	r18, 0x90	; 144
 522:	31 e0       	ldi	r19, 0x01	; 1
 524:	bc 01       	movw	r22, r24
 526:	62 9f       	mul	r22, r18
 528:	c0 01       	movw	r24, r0
 52a:	63 9f       	mul	r22, r19
 52c:	90 0d       	add	r25, r0
 52e:	72 9f       	mul	r23, r18
 530:	90 0d       	add	r25, r0
 532:	11 24       	eor	r1, r1
 534:	31 e0       	ldi	r19, 0x01	; 1
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	48 17       	cp	r20, r24
 53a:	59 07       	cpc	r21, r25
 53c:	09 f0       	breq	.+2      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	83 2f       	mov	r24, r19
 542:	92 2f       	mov	r25, r18
 544:	05 c0       	rjmp	.+10     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	fc 01       	movw	r30, r24
 552:	ee 0f       	add	r30, r30
 554:	ff 1f       	adc	r31, r31
 556:	e8 0f       	add	r30, r24
 558:	f9 1f       	adc	r31, r25
 55a:	ee 0f       	add	r30, r30
 55c:	ff 1f       	adc	r31, r31
 55e:	ee 0f       	add	r30, r30
 560:	ff 1f       	adc	r31, r31
 562:	e0 50       	subi	r30, 0x00	; 0
 564:	f0 4e       	sbci	r31, 0xE0	; 224
 566:	80 81       	ld	r24, Z
 568:	08 2e       	mov	r0, r24
 56a:	00 0c       	add	r0, r0
 56c:	99 0b       	sbc	r25, r25
 56e:	aa 0b       	sbc	r26, r26
 570:	bb 0b       	sbc	r27, r27
 572:	c8 16       	cp	r12, r24
 574:	d9 06       	cpc	r13, r25
 576:	ea 06       	cpc	r14, r26
 578:	fb 06       	cpc	r15, r27
 57a:	a8 f0       	brcs	.+42     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 57c:	31 96       	adiw	r30, 0x01	; 1
 57e:	20 e0       	ldi	r18, 0x00	; 0
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	c8 1a       	sub	r12, r24
 584:	d9 0a       	sbc	r13, r25
 586:	ea 0a       	sbc	r14, r26
 588:	fb 0a       	sbc	r15, r27
 58a:	2f 5f       	subi	r18, 0xFF	; 255
 58c:	3f 4f       	sbci	r19, 0xFF	; 255
 58e:	81 91       	ld	r24, Z+
 590:	08 2e       	mov	r0, r24
 592:	00 0c       	add	r0, r0
 594:	99 0b       	sbc	r25, r25
 596:	aa 0b       	sbc	r26, r26
 598:	bb 0b       	sbc	r27, r27
 59a:	c8 16       	cp	r12, r24
 59c:	d9 06       	cpc	r13, r25
 59e:	ea 06       	cpc	r14, r26
 5a0:	fb 06       	cpc	r15, r27
 5a2:	78 f7       	brcc	.-34     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a6:	20 e0       	ldi	r18, 0x00	; 0
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	2f 5f       	subi	r18, 0xFF	; 255
 5ac:	3f 4f       	sbci	r19, 0xFF	; 255
 5ae:	28 87       	std	Y+8, r18	; 0x08
 5b0:	39 87       	std	Y+9, r19	; 0x09
 5b2:	7f ef       	ldi	r23, 0xFF	; 255
 5b4:	c7 1a       	sub	r12, r23
 5b6:	d7 0a       	sbc	r13, r23
 5b8:	ce 82       	std	Y+6, r12	; 0x06
 5ba:	df 82       	std	Y+7, r13	; 0x07
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	1f 91       	pop	r17
 5c2:	0f 91       	pop	r16
 5c4:	ff 90       	pop	r15
 5c6:	ef 90       	pop	r14
 5c8:	df 90       	pop	r13
 5ca:	cf 90       	pop	r12
 5cc:	bf 90       	pop	r11
 5ce:	af 90       	pop	r10
 5d0:	9f 90       	pop	r9
 5d2:	8f 90       	pop	r8
 5d4:	7f 90       	pop	r7
 5d6:	6f 90       	pop	r6
 5d8:	5f 90       	pop	r5
 5da:	4f 90       	pop	r4
 5dc:	3f 90       	pop	r3
 5de:	08 95       	ret

000005e0 <_xdelay_ms>:
#include "Xdelay.h"
uint8_t XDELAY_ISFAST;

void _xdelay_ms(uint16_t delay)
{
	if(XDELAY_ISFAST)
 5e0:	20 91 1c 20 	lds	r18, 0x201C	; 0x80201c <XDELAY_ISFAST>
 5e4:	21 11       	cpse	r18, r1
 5e6:	13 c0       	rjmp	.+38     	; 0x60e <_xdelay_ms+0x2e>
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
			for (uint16_t i=0; i<delay; i++)_delay_ms(1);
			
	for (uint16_t i=0; i<delay; i++)_delay_ms(1);
 5e8:	00 97       	sbiw	r24, 0x00	; 0
 5ea:	a9 f4       	brne	.+42     	; 0x616 <_xdelay_ms+0x36>
 5ec:	08 95       	ret

void _xdelay_ms(uint16_t delay)
{
	if(XDELAY_ISFAST)
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
			for (uint16_t i=0; i<delay; i++)_delay_ms(1);
 5ee:	20 e0       	ldi	r18, 0x00	; 0
 5f0:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5f2:	e3 ef       	ldi	r30, 0xF3	; 243
 5f4:	f1 e0       	ldi	r31, 0x01	; 1
 5f6:	31 97       	sbiw	r30, 0x01	; 1
 5f8:	f1 f7       	brne	.-4      	; 0x5f6 <_xdelay_ms+0x16>
 5fa:	00 c0       	rjmp	.+0      	; 0x5fc <_xdelay_ms+0x1c>
 5fc:	00 00       	nop
 5fe:	2f 5f       	subi	r18, 0xFF	; 255
 600:	3f 4f       	sbci	r19, 0xFF	; 255
 602:	82 17       	cp	r24, r18
 604:	93 07       	cpc	r25, r19
 606:	a9 f7       	brne	.-22     	; 0x5f2 <_xdelay_ms+0x12>
 608:	41 50       	subi	r20, 0x01	; 1
uint8_t XDELAY_ISFAST;

void _xdelay_ms(uint16_t delay)
{
	if(XDELAY_ISFAST)
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
 60a:	11 f4       	brne	.+4      	; 0x610 <_xdelay_ms+0x30>
 60c:	ed cf       	rjmp	.-38     	; 0x5e8 <_xdelay_ms+0x8>
 60e:	40 e1       	ldi	r20, 0x10	; 16
			for (uint16_t i=0; i<delay; i++)_delay_ms(1);
 610:	00 97       	sbiw	r24, 0x00	; 0
 612:	69 f7       	brne	.-38     	; 0x5ee <_xdelay_ms+0xe>
 614:	f9 cf       	rjmp	.-14     	; 0x608 <_xdelay_ms+0x28>
			
	for (uint16_t i=0; i<delay; i++)_delay_ms(1);
 616:	20 e0       	ldi	r18, 0x00	; 0
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	e3 ef       	ldi	r30, 0xF3	; 243
 61c:	f1 e0       	ldi	r31, 0x01	; 1
 61e:	31 97       	sbiw	r30, 0x01	; 1
 620:	f1 f7       	brne	.-4      	; 0x61e <_xdelay_ms+0x3e>
 622:	00 c0       	rjmp	.+0      	; 0x624 <_xdelay_ms+0x44>
 624:	00 00       	nop
 626:	2f 5f       	subi	r18, 0xFF	; 255
 628:	3f 4f       	sbci	r19, 0xFF	; 255
 62a:	82 17       	cp	r24, r18
 62c:	93 07       	cpc	r25, r19
 62e:	a9 f7       	brne	.-22     	; 0x61a <_xdelay_ms+0x3a>
 630:	08 95       	ret

00000632 <_xdelay_us>:
}

void _xdelay_us(uint16_t delay)
{
	if(XDELAY_ISFAST)
 632:	20 91 1c 20 	lds	r18, 0x201C	; 0x80201c <XDELAY_ISFAST>
 636:	21 11       	cpse	r18, r1
 638:	0e c0       	rjmp	.+28     	; 0x656 <_xdelay_us+0x24>
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
			for (uint16_t i=0; i<delay; i++)_delay_us(1);
			
	for (uint16_t i=0; i<delay; i++)_delay_us(1);
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	81 f4       	brne	.+32     	; 0x65e <_xdelay_us+0x2c>
 63e:	08 95       	ret

void _xdelay_us(uint16_t delay)
{
	if(XDELAY_ISFAST)
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
			for (uint16_t i=0; i<delay; i++)_delay_us(1);
 640:	20 e0       	ldi	r18, 0x00	; 0
 642:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 644:	00 c0       	rjmp	.+0      	; 0x646 <_xdelay_us+0x14>
 646:	2f 5f       	subi	r18, 0xFF	; 255
 648:	3f 4f       	sbci	r19, 0xFF	; 255
 64a:	82 17       	cp	r24, r18
 64c:	93 07       	cpc	r25, r19
 64e:	d1 f7       	brne	.-12     	; 0x644 <_xdelay_us+0x12>
 650:	41 50       	subi	r20, 0x01	; 1
}

void _xdelay_us(uint16_t delay)
{
	if(XDELAY_ISFAST)
		for (uint8_t c=0; c<XDELAY_SCALEFACTOR; c++)
 652:	11 f4       	brne	.+4      	; 0x658 <_xdelay_us+0x26>
 654:	f2 cf       	rjmp	.-28     	; 0x63a <_xdelay_us+0x8>
 656:	40 e1       	ldi	r20, 0x10	; 16
			for (uint16_t i=0; i<delay; i++)_delay_us(1);
 658:	00 97       	sbiw	r24, 0x00	; 0
 65a:	91 f7       	brne	.-28     	; 0x640 <_xdelay_us+0xe>
 65c:	f9 cf       	rjmp	.-14     	; 0x650 <_xdelay_us+0x1e>
			
	for (uint16_t i=0; i<delay; i++)_delay_us(1);
 65e:	20 e0       	ldi	r18, 0x00	; 0
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	00 c0       	rjmp	.+0      	; 0x664 <_xdelay_us+0x32>
 664:	2f 5f       	subi	r18, 0xFF	; 255
 666:	3f 4f       	sbci	r19, 0xFF	; 255
 668:	82 17       	cp	r24, r18
 66a:	93 07       	cpc	r25, r19
 66c:	d1 f7       	brne	.-12     	; 0x662 <_xdelay_us+0x30>
 66e:	08 95       	ret

00000670 <sysclk_init>:
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
 676:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
 67a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
 67e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
 682:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
 686:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
 68a:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
 68e:	08 95       	ret

00000690 <main>:
 690:	cf 93       	push	r28
 692:	df 93       	push	r29
 694:	cd b7       	in	r28, 0x3d	; 61
 696:	de b7       	in	r29, 0x3e	; 62
 698:	2e 97       	sbiw	r28, 0x0e	; 14
 69a:	cd bf       	out	0x3d, r28	; 61
 69c:	de bf       	out	0x3e, r29	; 62
 69e:	0e 94 38 03 	call	0x670	; 0x670 <sysclk_init>
 6a2:	60 e0       	ldi	r22, 0x00	; 0
 6a4:	75 e6       	ldi	r23, 0x65	; 101
 6a6:	8d ec       	ldi	r24, 0xCD	; 205
 6a8:	9d e1       	ldi	r25, 0x1D	; 29
 6aa:	0e 94 9e 01 	call	0x33c	; 0x33c <Set_Unix_Time>
 6ae:	ce 01       	movw	r24, r28
 6b0:	01 96       	adiw	r24, 0x01	; 1
 6b2:	0e 94 a7 01 	call	0x34e	; 0x34e <time_GetLocalTime>
 6b6:	ce 01       	movw	r24, r28
 6b8:	01 96       	adiw	r24, 0x01	; 1
 6ba:	0e 94 8e 01 	call	0x31c	; 0x31c <lcd_string>
 6be:	81 e0       	ldi	r24, 0x01	; 1
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_xdelay_ms>
 6c6:	fb cf       	rjmp	.-10     	; 0x6be <main+0x2e>

000006c8 <__udivmodsi4>:
 6c8:	a1 e2       	ldi	r26, 0x21	; 33
 6ca:	1a 2e       	mov	r1, r26
 6cc:	aa 1b       	sub	r26, r26
 6ce:	bb 1b       	sub	r27, r27
 6d0:	fd 01       	movw	r30, r26
 6d2:	0d c0       	rjmp	.+26     	; 0x6ee <__udivmodsi4_ep>

000006d4 <__udivmodsi4_loop>:
 6d4:	aa 1f       	adc	r26, r26
 6d6:	bb 1f       	adc	r27, r27
 6d8:	ee 1f       	adc	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	a2 17       	cp	r26, r18
 6de:	b3 07       	cpc	r27, r19
 6e0:	e4 07       	cpc	r30, r20
 6e2:	f5 07       	cpc	r31, r21
 6e4:	20 f0       	brcs	.+8      	; 0x6ee <__udivmodsi4_ep>
 6e6:	a2 1b       	sub	r26, r18
 6e8:	b3 0b       	sbc	r27, r19
 6ea:	e4 0b       	sbc	r30, r20
 6ec:	f5 0b       	sbc	r31, r21

000006ee <__udivmodsi4_ep>:
 6ee:	66 1f       	adc	r22, r22
 6f0:	77 1f       	adc	r23, r23
 6f2:	88 1f       	adc	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	1a 94       	dec	r1
 6f8:	69 f7       	brne	.-38     	; 0x6d4 <__udivmodsi4_loop>
 6fa:	60 95       	com	r22
 6fc:	70 95       	com	r23
 6fe:	80 95       	com	r24
 700:	90 95       	com	r25
 702:	9b 01       	movw	r18, r22
 704:	ac 01       	movw	r20, r24
 706:	bd 01       	movw	r22, r26
 708:	cf 01       	movw	r24, r30
 70a:	08 95       	ret

0000070c <__umulhisi3>:
 70c:	a2 9f       	mul	r26, r18
 70e:	b0 01       	movw	r22, r0
 710:	b3 9f       	mul	r27, r19
 712:	c0 01       	movw	r24, r0
 714:	a3 9f       	mul	r26, r19
 716:	70 0d       	add	r23, r0
 718:	81 1d       	adc	r24, r1
 71a:	11 24       	eor	r1, r1
 71c:	91 1d       	adc	r25, r1
 71e:	b2 9f       	mul	r27, r18
 720:	70 0d       	add	r23, r0
 722:	81 1d       	adc	r24, r1
 724:	11 24       	eor	r1, r1
 726:	91 1d       	adc	r25, r1
 728:	08 95       	ret

0000072a <_exit>:
 72a:	f8 94       	cli

0000072c <__stop_program>:
 72c:	ff cf       	rjmp	.-2      	; 0x72c <__stop_program>
